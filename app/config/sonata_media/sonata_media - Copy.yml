doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~

    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 128 , quality: 100}
                medium:   { width: 512 , quality: 100}
                medium:     { width: 400, quality: 100}
                big:   { width: 1024 , quality: 100}

        event:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                medium:     { width: 400, quality: 100}
                large:     { width: 600, quality: 100}
                displayIndex: {width:370, height:250, quality:50}
        venue:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                medium:     { width: 400, quality: 100}
                large:     { width: 598, quality: 100}
                displayIndex: {width:570, height:250, quality:50}
        article:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                medium:     { width: 400, quality: 100}
                large:     { width: 600, quality: 100}
                displayIndex: {width:370, height:250, quality:50}
        gallery:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                medium:     { width: 400, quality: 100}
                large:     { width: 600, quality: 100}
                displayIndex: {width:370, height:370, quality:50}
        profile:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 200, quality: 100}
                medium:     { width: 400, quality: 100}
        adv:
            providers:
                - sonata.media.provider.image
            formats:
                horiz : { width: 590, height: 90, quality: 100}
                verti : { width: 120, height: 600, quality: 100}
                snapadv: { width: 300, height: 300, quality: 100}
    cdn:
        server:
            path: /uploads/media

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

    providers:
        file:
            service:    sonata.media.provider.file
            resizer:    false
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['pdf', 'txt', 'rtf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pttx', 'odt', 'odg', 'odp', 'ods', 'odc', 'odf', 'odb', 'csv', 'xml']
            allowed_mime_types: ['application/pdf', 'application/x-pdf', 'application/rtf', 'text/html', 'text/rtf', 'text/plain']

        image:
            service:    sonata.media.provider.image
            #resizer:    sonata.media.resizer.simple
            resizer: sonata.media.resizer.custom
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['jpg', 'png', 'jpeg']
            allowed_mime_types: ['image/pjpeg', 'image/jpeg', 'image/png', 'image/x-png']
            